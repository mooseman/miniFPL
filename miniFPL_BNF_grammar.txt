
/* BNF grammar - miniFPL  */ 


program :=  +stmt SEMICOLON    

stmt    :=  assignment        
        |   is_alpha_stmt 
        |   is_digit_stmt
        |   is_alnum_stmt 
        |   is_punct_stmt 
        |   is_space_stmt 
        |   head_stmt 
        |   tail_stmt 
        |   elem_stmt  
        |   if_then_stmt 
        |   elif_stmt
        |   else_stmt 
        |   pass_stmt 
        |   in_stmt     
        |   compar_stmt    
    

assignment  :=  variable = value ;

is_alpha_stmt  :=  is_alpha list_element ; 

is_digit_stmt  :=  is_digit list_element ;

is_alnum_stmt  :=  is_alnum list_element ;

is_punct_stmt  :=  is_punct list_element ; 

is_space_stmt  :=  is_space list_element ;

head_stmt      :=  HEAD list ;

tail_stmt      :=  TAIL list ;

elem_stmt      :=  ELEM list ;

if_stmt        :=  IF compar_stmt THEN assignment ( elif_stmt | else_stmt ) ; 

elif_stmt      :=  ELIF compar_stmt THEN assignment ( elif_stmt | else_stmt ) ; 

else_stmt      :=  ELSE assignment | pass_stmt ; 

pass_stmt      :=  PASS ; 

in_stmt        :=  IN list ;  

compar_stmt    :=  variable OP value 

variable       :=  identifier  

OP             :=  < > == <= >= != 

identifier     :=  IDENT  

value          :=  integer | char | string | list 

list_element   :=  integer | char | string 

list           :=  empty_list 
               |   one_elem_list 
               |   multi_elem_list 

empty_list     :=  [] 

one_elem_list  :=  [ list_element ] 

multi_elem_list  :=  [ list_element , +list_element ] 

SEMICOLON      :=   ';'  









     
